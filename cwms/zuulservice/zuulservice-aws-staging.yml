
zuul:
  # By default, sensitiveHeaders=Cookie,Set-Cookie,Authorization, which will cause the Authorizaiton be
  # ignored after flow the request by ZUUL, then if we need to use ZUUL in front of a OAuth2, we will
  # fail because of the missing of Authorization section in HTML head. This Authorization section will
  # include Basic ZWFnbGVleWU6dGhpc2lzc2VjcmV0, While Basic is the key word for basic type of authenticaiton
  # and ZWFnbGVleWU6dGhpc2lzc2VjcmV0 is the encrypted Client:Secret
  sensitiveHeaders: Cookie,Set-Cookie
  ignored-services: "*"
  prefix:  /api
  routes:
    layoutservice:
      path: /layout/**
#      url: http://layoutservice:8180
      serviceId: layoutservice
    authservice:
      path:  /auth/**
#      url: http://authserver:8901
      serviceId: authserver
    resourceservice:
      path:  /resource/**
#      url: http://resourceservice:8280
      serviceId: resourceservice
    commonservice:
      path:  /common/**
#      url: http://commonservice:8380
      serviceId: commonservice
    inventoryservice:
      path:  /inventory/**
#      url: http://inventoryservice:8480
      serviceId: inventoryservice
    inboundservice:
      path:  /inbound/**
#      url: http://inboundservice:8580
      serviceId: inboundservice
    outboundservice:
      path:  /outbound/**
#      url: http://outboundservice:8680
      serviceId: outboundservice
    workorderservice:
      path:  /workorder/**
#      url: http://workorderservice:8780
      serviceId: workorderservice
    integrationservice:
      path:  /integration/**
#      url: http://integrationservice:8880
      serviceId: integrationservice
    adminservice:
      path:  /admin/**
#      url: http://adminservice:8078
      serviceId: adminservice
  host:
    time-to-live: -1
    connect-timeout-millis: 5000
    max-per-route-connections: 10000
    max-total-connections: 5000
    socket-timeout-millis: 60000
    semaphore:
      max-semaphores: 500


layoutservice:
  ribbon:
    url: http://layoutservice:8180

authservice:
  ribbon:
    url: http://authserver:8901

resourceservice:
  ribbon:
    url: http://resourceservice:8280

commonservice:
  ribbon:
    url: http://commonservice:8380

inventoryservice:
  ribbon:
    url: http://inventoryservice:8480

inboundservice:
  ribbon:
    url: http://inboundservice:8580

outboundservice:
  ribbon:
    url: http://outboundservice:8680

workorderservice:
  ribbon:
    url: http://workorderservice:8780

integrationservice:
  ribbon:
    url: http://integrationservice:8880

adminservice:
  ribbon:
    url: http://adminservice:8078

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 25000
ribbon:
  ReadTimeout: 60000
  connection-timeout: 3000
  eureka:
    enabled: false

# Expose * so we can access /actuator/routes
management:
  endpoints:
    web:
      exposure:
        include: "*"
# disable eureka in staging environment as we are using kubernetes
# eureka:
#  instance:
#    preferIpAddress: true
#  client:
#    registerWithEureka: true
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://eurekaserver:8761/eureka


logging:
  level:
    com.netflix: WARN
    org.springframework.web: WARN
    com.garyzhangscm: DEBUG
  file: zuulservice.log
  path: /tmp/logs



security:
  oauth2:
    client:
      access-token-uri: http://authserver:8901/oauth/token
      clientId: "cwms"
      clientSecret: "gz-cwms"
      grantType: password
      scope: webclient
    resource:
      ##   userInfoUri: http://localhost:5555/api/auth/user
      # userInfoUri: http://localhost:8901/user
      # tokenInfoUri: http://localhost:8901/oauth2/check_token
      userInfoUri: http://authserver:8901/user
      tokenInfoUri: http://authserver:8901/oauth/check_token

spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB