###
# Eureka server
# Configuration server
# zuul server
# db
###

# apiVersion: v1
# kind: Service
# metadata:
#   name: eurekaserver
#   namespace: staging
#   labels:
#     app: eurekaserver
# spec:
#   selector:
#     app: eurekaserver
#   type: NodePort
#   ports:
#     - protocol: TCP
#       port: 8761
#       targetPort: 8761
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: eurekaserver
#   namespace: staging
#   labels:
#     app: eurekaserver
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: eurekaserver
#   template:
#     metadata:
#       labels:
#         app: eurekaserver
#     spec:
#       nodeSelector:
#         subnet: private
#       containers:
#       - name: eurekaserver
#         image: garyzhangscm/cwms-eurekasvr
#         ports:
#         - containerPort: 8761
#         env:
#         - name: TZ
#           value: "America/Los_Angeles" 
# ---
apiVersion: v1
kind: Service
metadata:
  name: configserver
  namespace: staging
  labels:
    app: configserver
spec:
  selector:
    app: configserver
  type: NodePort
  ports:
    - protocol: TCP
      port: 8888
      targetPort: 8888
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: configserver
  namespace: staging
  labels:
    app: configserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: configserver
  template:
    metadata:
      labels:
        app: configserver
    spec:
      nodeSelector:
        subnet: public
      containers:
      - name: configserver
        image: garyzhangscm/cwms-confsvr
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.25"
            memory: "256Mi"
        ports:
        - containerPort: 8888
        env:
        - name: SPRING_PROFILE
          value: "aws-dev"
        - name: CONFIGSERVER_URI
          value: "http://configserver:8888"
        - name: CONFIGSERVER_PORT
          value: "8888"
        - name: ENCRYPT_KEY
          value: "CWMS2018"
        - name: COMPOSE_PROJECT_NAME
          value: "CWMS-APP"
        - name: TZ
          value: "America/Los_Angeles"
        - name: COMPOSE_PROJECT_NAME
          value: "CONFIGURATION"
---
apiVersion: v1
kind: Service
metadata:
  name: zuulserver
  namespace: staging
  labels:
    app: zuulserver
spec:
  selector:
    app: zuulserver
  type: NodePort
  ports:
    - protocol: TCP
      port: 5555
      targetPort: 5555
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zuulserver
  namespace: staging
  labels:
    app: zuulserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zuulserver
  template:
    metadata:
      labels:
        app: zuulserver
    spec:
      nodeSelector:
        subnet: public
      containers:
      - name: zuulserver
        image: garyzhangscm/cwms-zuulsvr:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5555
        env:
        - name: SPRING_PROFILE
          value: "aws-staging"
        - name: CONFIGSERVER_URI
          value: "http://configserver:8888"
        - name: CONFIGSERVER_PORT
          value: "8888"
        - name: ENCRYPT_KEY
          value: "CWMS2018"
        - name: COMPOSE_PROJECT_NAME
          value: "CWMS-APP"
        - name: TZ
          value: "America/Los_Angeles"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zuulserver
  namespace: staging
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
spec:
  rules:
  #- host: staging.claytechsuite.com    
  # SSL Setting (Optional only if we are not using certificate-arn annotation)
  - http:
      paths:
      - path: /*
        pathType: Prefix
        backend:
          service:
            name: zuulserver
            port:
              number: 5555 
---

apiVersion: v1
kind: Service
metadata:
  name: database
  namespace: staging
  labels:
    app: database
spec:
  selector:
    app: database
  type: NodePort
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
  namespace: staging
  labels:
    app: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      nodeSelector:
        subnet: private
      containers:
      - name: database
        image: mysql
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "garyzhangscm"
        - name: MYSQL_DATABASE
          value: "cwms"
        - name: MYSQL_USER
          value: "cwms_dba"
        - name: MYSQL_PASSWORD
          value: "cwms@2018"
        - name: COMPOSE_PROJECT_NAME
          value: "DATABASE"
        - name: TZ
          value: "America/Los_Angeles"
---
apiVersion: v1
kind: Service
metadata:
  name: adminer
  namespace: staging
  labels:
    app: adminer
spec:
  selector:
    app: adminer
  type: NodePort
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer
  namespace: staging
  labels:
    app: adminer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adminer
  template:
    metadata:
      labels:
        app: adminer
    spec:
      nodeSelector:
        subnet: private
      containers:
      - name: adminer
        image: adminer
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.25"
            memory: "256Mi"
        ports:
        - containerPort: 8080
        env:
        - name: COMPOSE_PROJECT_NAME
          value: "DATABASE"
        - name: TZ
          value: "America/Los_Angeles"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: adminer
  namespace: staging
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
spec:
  rules:
  - http:
      paths:
      - path: /*
        pathType: Prefix
        backend:
          service:
            name: adminer
            port:
              number: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: staging
  labels:
    app: zookeeper
spec:
  selector:
    app: zookeeper
  type: NodePort
  ports:
    - protocol: TCP
      port: 2181
      targetPort: 2181
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: staging
  labels:
    app: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      nodeSelector:
        subnet: kafka
      containers:
      - name: zookeeper
        image: wurstmeister/zookeeper
        resources:
          limits:
            cpu: "1"
            memory: "1024Mi"
          requests:
            cpu: "0.5"
            memory: "1024Mi"
        ports:
        - containerPort: 2181
---
apiVersion: v1
kind: Service
metadata:
  name: kafkaservice
  namespace: staging
  labels:
    app: kafka
spec:
  selector:
    app: kafka
  type: NodePort
  ports:
    - protocol: TCP
      port: 9092
      targetPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: staging
  labels:
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      nodeSelector:
        subnet: kafka
      containers:
      - name: kafka
        image: wurstmeister/kafka
        resources:
          limits:
            cpu: "2"
            memory: "3072Mi"
          requests:
            cpu: "1"
            memory: "2048Mi"
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "kafkaservice"
        - name: KAFKA_BROKER_ID
          value: "10"      
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper:2181"
        - name: TZ
          value: "America/Los_Angeles"
        - name: KAFKA_CREATE_TOPICS
          value: "ops_transaction:1:1,order_activity:1:1,
                     test_data_init:1:1,
                     short_allocation:1:1,
                     INTEGRATION_CUSTOMER:1:1,
                     INTEGRATION_CLIENT:1:1,
                     INTEGRATION_SUPPLIER:1:1,
                     INTEGRATION_ITEM:1:1,
                     INTEGRATION_ITEM_FAMILY:1:1,
                     INTEGRATION_ITEM_PACKAGE_TYPE:1:1,
                     INTEGRATION_ITEM_UNIT_OF_MEASURE:1:1,
                     INVENTORY_ACTIVITY:1:1,
                     INVENTORY_ADJUSTMENT_REQUEST_PROCESSED:1:1,
                     INTEGRATION_INVENTORY_ADJUSTMENT_CONFIRMATION:1:1,
                     INTEGRATION_INVENTORY_ATTRIBUTE_CHANGE_CONFIRMATION:1:1,
                     SYSTEM_ERROR:1:1,
                     INTEGRATION_ORDER:1:1,
                     INTEGRATION_ORDER_LINE:1:1,
                     INTEGRATION_RECEIPT:1:1,
                     INTEGRATION_RECEIPT_LINE:1:1,
                     INTEGRATION_ORDER_CONFIRMATION:1:1,
                     INTEGRATION_ORDER_LINE_CONFIRMATION:1:1,
                     INTEGRATION_SHIPMENT_LINE_CONFIRMATION:1:1,
                     INTEGRATION_RECEIPT_CONFIRMATION:1:1,
                     INTEGRATION_RECEIPT_LINE_CONFIRMATION:1:1,
                     INTEGRATION_WORK_ORDER_CONFIRMATION:1:1,
                     INTEGRATION_WORK_ORDER:1:1,
                     INTEGRATION_BILL_OF_MATERIAL:1:1"       
